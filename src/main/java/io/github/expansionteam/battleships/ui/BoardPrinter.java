package io.github.expansionteam.battleships.ui;import io.github.expansionteam.battleships.engine.board.Board;import io.github.expansionteam.battleships.engine.board.Field;import java.io.Console;import java.util.Iterator;public class BoardPrinter {	private final char[] numbers = {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'};	private final char[] letters = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'};	private final Console console = System.console();		private final String getCurrentCharacter(Field currentField) {		if (currentField.isOccupied())			return "#";		return " ";	}		private final String getLineOfNumbers() {		StringBuilder sb = new StringBuilder();		sb.append(" |");		for (int i = 0; i < numbers.length; i++) {			sb.append(numbers[i]);			sb.append("|");		}		return sb.toString();	}		private final String getSeparatingLine() {		return "-+-+-+-+-+-+-+-+-+-+-|";	}		private final String getLastLine() {		return "---------------------";	}		protected final String generateBoardAsString(Board board) {		if (board == null) {			System.out.println("Null board!");			return "";		}		int counter = 0;		Iterator<Field> iterator = board.iterator();		StringBuilder sb = new StringBuilder();		sb.append( getLineOfNumbers() );		sb.append("\n");		sb.append( getSeparatingLine() );		sb.append("\n");		while (iterator.hasNext()) {			if (counter % 10 == 0) {				sb.append(letters[counter/10]);			}			sb.append("|");			sb.append( getCurrentCharacter( iterator.next() ) );			++counter;			if (counter % 10 == 0 && iterator.hasNext()) {				sb.append("|\n");				sb.append( getSeparatingLine() );				sb.append("\n");			}		}		sb.append("|");		sb.append("\n");		sb.append( getLastLine() );		return sb.toString();	}		public void showBoard(Board board) {		if (console == null) {			System.out.println( generateBoardAsString( board ) );		}		else {			console.printf( generateBoardAsString( board ) );		}	}}
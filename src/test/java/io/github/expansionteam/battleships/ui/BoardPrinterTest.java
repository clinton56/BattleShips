package io.github.expansionteam.battleships.ui;import io.github.expansionteam.battleships.engine.board.Board;import io.github.expansionteam.battleships.engine.board.Field;import org.testng.annotations.Test;import static org.mockito.Mockito.*;import static org.testng.AssertJUnit.assertEquals;import java.util.List;import java.util.ArrayList;import java.util.Iterator;@Test()public class BoardPrinterTest {	private final Board mockBoard = mock(Board.class);	private final BoardPrinter bp = new BoardPrinter();	private final List<Field> listOfEmptyFields = new ArrayList<>();	private final List<Field> listOfFullFields = new ArrayList<>();	private final List<Field> listWithSomeOccupiedFields = new ArrayList<>();		@Test	public void printEmptyBoardTest() {		// given		for (int i = 0; i < 100; i++) {			listOfEmptyFields.add( mock(Field.class) );			when(listOfEmptyFields.get(i).isOccupied()).thenReturn(false);		}		final String emptyBoardExpected = " |1|2|3|4|5|6|7|8|9|0|\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"A| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"B| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"C| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"D| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"E| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"F| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"G| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"H| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"I| | | | | | | | | | |\n" +			"-+-+-+-+-+-+-+-+-+-+-|\n" +			"J| | | | | | | | | | |\n" +			"---------------------";					// when		Iterator<Field> iterator = listOfEmptyFields.iterator();		when( mockBoard.iterator() ).thenReturn( iterator );		String boardAsString = bp.generateBoardAsString( mockBoard );		//then		assertEquals(boardAsString , emptyBoardExpected);	}	@Test	public void printFullBoardTest() {		// given		for (int i = 0; i < 100; i++) {			listOfFullFields.add( mock(Field.class) );			when(listOfFullFields.get(i).isOccupied()).thenReturn(true);		}		final String fullBoardExpected = " |1|2|3|4|5|6|7|8|9|0|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"A|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"B|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"C|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"D|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"E|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"F|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"G|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"H|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"I|#|#|#|#|#|#|#|#|#|#|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"J|#|#|#|#|#|#|#|#|#|#|\n" +				"---------------------";		// when		Iterator<Field> iterator = listOfFullFields.iterator();		when( mockBoard.iterator() ).thenReturn( iterator );		String boardAsString = bp.generateBoardAsString( mockBoard );		//then		assertEquals(boardAsString , fullBoardExpected);	}	@Test	public void printBoardWithSomeShips() {		// given		for (int i = 0; i < 100; i++) {			listWithSomeOccupiedFields.add( mock(Field.class) );			if (i == 1 || i == 26 || i == 36 || i == 62 || i == 98 || i == 99) {				when(listWithSomeOccupiedFields.get(i).isOccupied()).thenReturn(true);			}			else {				when(listWithSomeOccupiedFields.get(i).isOccupied()).thenReturn(false);			}		}		final String boardExpected = " |1|2|3|4|5|6|7|8|9|0|\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"A| |#| | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"B| | | | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"C| | | | | | |#| | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"D| | | | | | |#| | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"E| | | | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"F| | | | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"G| | |#| | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"H| | | | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"I| | | | | | | | | | |\n" +				"-+-+-+-+-+-+-+-+-+-+-|\n" +				"J| | | | | | | | |#|#|\n" +				"---------------------";		// when		Iterator<Field> iterator = listWithSomeOccupiedFields.iterator();		when( mockBoard.iterator() ).thenReturn( iterator );		String boardAsString = bp.generateBoardAsString( mockBoard );		//then		assertEquals(boardAsString , boardExpected);	}}